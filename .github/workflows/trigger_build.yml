name: Build Inventar
on: [workflow_dispatch,push]

jobs:
  get_diff:
    runs-on: ubuntu-latest

    outputs:
      result_backend: ${{steps.diff_backend.outputs.result_backend}}
      result_frontend: ${{steps.diff_frontend.outputs.result_frontend}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '2'
      - name: Check for backend changes
        id: diff_backend
        run: |
          RESULT=$(git diff --name-only HEAD^1 HEAD | grep ^backend | wc -l)
          echo "result_backend=$RESULT" >> "$GITHUB_OUTPUT"
      - name: Check for frontend changes
        id: diff_frontend
        run: |
          RESULT=$(git diff --name-only HEAD^1 HEAD | grep ^frontend | wc -l)
          echo "result_frontend=$RESULT" >> "$GITHUB_OUTPUT"
  trigger_pipeline:
    runs-on: ubuntu-latest
    needs: get_diff
    steps:
      - name: Get values
        id: get-trigger
        run: |
          echo "result_backend=${{needs.get_diff.outputs.result_backend}}" >> $GITHUB_OUTPUT
          echo "result_frontend=${{needs.get_diff.outputs.result_frontend}}" >> $GITHUB_OUTPUT
      - name: Trigger Backend Build
        if: steps.get-trigger.outputs.result_backend == 1
        uses: actions/github-script@v7
        id: trigger-backend
        with:
          github-token: ${{ secrets.ACTIONS_KEY }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: 'alexanderjuhn',
              repo: 'gha-workflows',
              workflow_id: 'build_inventar_backend.yml',
              ref: 'main',
            });
      - name: Trigger Frontend Build
        if: steps.get-trigger.outputs.result_frontend == 1
        uses: actions/github-script@v7
        id: trigger-frontend
        with:
          github-token: ${{ secrets.ACTIONS_KEY }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: 'alexanderjuhn',
              repo: 'gha-workflows',
              workflow_id: 'build_inventar_frontend.yml',
              ref: 'main',
            });
  
